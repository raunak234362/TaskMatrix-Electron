name: Build, Release and Upload Installers

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
permissions:
  contents: write  

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo VITE_BASE_URL=${{ secrets.PROD_BASE_URL }} > .env

      - name: Build Windows Installer
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: dist/*.exe

  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo VITE_BASE_URL=${{ secrets.PROD_BASE_URL }} > .env

      - name: Build macOS App
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-installer
          path: dist/*.dmg

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo VITE_BASE_URL=${{ secrets.PROD_BASE_URL }} > .env

      - name: Build Linux App
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm

  release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get app version
        id: get_version
        run: |
          version=$(cat package.json | jq -r .version)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
